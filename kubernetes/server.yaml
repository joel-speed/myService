---

apiVersion: v1
kind: Service
metadata:
  name: myservice
  labels:
    project: myservice
    role: server
spec:
  ports:
  - port: 8080
  selector:
    project: myservice
    role: server

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: myservice
  labels:
    project: myservice
    role: server
spec:
  selector:
    matchLabels:
      project: myservice
      role: server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        project: myservice
        role: server
        service: myservice
        slussPublic: 'true'
        slussAuth: 'true'
    spec:
      containers:
      - image: docker-registry.speedledger.net/myservice:master
        imagePullPolicy: Always
        name: myservice
        args:
        - -Dconfig.resource=$(ENVIRONMENT_TYPE).conf
        env:
        - name: ENVIRONMENT_TYPE
          value: test
        - name: DEPLOY_GROUP
          value: dev
        - name: ENVIRONMENT_NAME
          value: $(DEPLOY_GROUP)
        - name: ENVIRONMENT_URL
          value: https://$(ENVIRONMENT_NAME).speedledger.net
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
          name: myservice
        livenessProbe:
          httpGet:
            path: /ping
            port: myservice
          initialDelaySeconds: 60
        readinessProbe:
          httpGet:
            path: /ping
            port: myservice
          initialDelaySeconds: 60
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      - image: docker-registry.speedledger.net/fluentd:master
        samson/dockerfile: none
        name: fluentd
        imagePullPolicy: Always
        volumeMounts:
        - name: logs
          mountPath: /logs/pod/
        ports:
        - containerPort: 8500
          name: ping
        env:
          - name: FORWARD_HOST
            value: fluentd.default
          - name: FLUENTD_CONF
            value: fluent-k8s-client.conf
          - name: LOG_PATH
            value: /logs
          - name: ENVIRONMENT_TYPE
            value: test
          - name: ENVIRONMENT_NAME
            value: dev
        livenessProbe:
          httpGet:
            path: /
            port: ping
        readinessProbe:
          httpGet:
            path: /
            port: ping
      imagePullSecrets:
      - name: speedledger-registry
      volumes:
      - name: logs
        emptyDir: {}
